<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="d5af7a4d-927f-4e54-a90c-f5dd60ada04c" name="Changes" comment="Add configuration files and Docker setup for weather and city details functionality">
      <change afterPath="$PROJECT_DIR$/internal/repo/webapi/city_details_openstreetmap_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.air.toml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Dockerfile" beforeDir="false" afterPath="$PROJECT_DIR$/Dockerfile" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Makefile" beforeDir="false" afterPath="$PROJECT_DIR$/Makefile" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/dev.Dockerfile" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/docker-compose.override.yml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/app/app.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/app/app.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/controller/http/router.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/controller/http/router.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/controller/http/v1/request/weather.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/controller/http/v1/request/weather.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/controller/http/v1/weather.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/controller/http/v1/weather.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/entity/city_details.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/entity/city_details.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/entity/weather.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/entity/weather.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/repo/webapi/city_details_openstreetmap.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/repo/webapi/city_details_openstreetmap.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/repo/webapi/weather_open_weather.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/repo/webapi/weather_open_weather.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/usecase/weather/types.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/usecase/weather/types.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/usecase/weather/weather.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/usecase/weather/weather.go" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="GOROOT" url="file:///opt/homebrew/opt/go/libexec" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitHubPullRequestSearchHistory"><![CDATA[{
  "lastFilter": {
    "state": "OPEN",
    "assignee": "hong195"
  }
}]]></component>
  <component name="GithubPullRequestsUISettings"><![CDATA[{
  "selectedUrlAndAccountId": {
    "url": "https://github.com/hong195/wheater-bot.git",
    "accountId": "25539d78-5289-4dc5-86d5-408a54338016"
  }
}]]></component>
  <component name="KubernetesApiPersistence"><![CDATA[{}]]></component>
  <component name="KubernetesApiProvider"><![CDATA[{
  "isMigrated": true
}]]></component>
  <component name="ProjectColorInfo"><![CDATA[{
  "associatedIndex": 2
}]]></component>
  <component name="ProjectId" id="2y4rDZNqmbqOX9iI12shPy5mJR0" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "DefaultGoTemplateProperty": "Go File",
    "Docker.docker-compose.override.yml: Compose Deployment.executor": "Run",
    "Docker.docker-compose.yml.app: Compose Deployment.executor": "Run",
    "Docker.docker-compose.yml: Compose Deployment.executor": "Run",
    "Go Build.go build github.com/hong195/wheater-bot/cmd/app.executor": "Run",
    "Go Build.go build goweatherbot.executor": "Run",
    "Go Test.TestCantHandleFailedApiRequest in github.com/hong195/wheater-bot/internal/repo/webapi.executor": "Run",
    "Go Test.TestCityRepoCanFetchDetailsByLatLon in github.com/hong195/wheater-bot/internal/repo/webapi.executor": "Run",
    "Go Test.TestGetCityDetailsByCoordinatesFailsIfCantParseJson in github.com/hong195/wheater-bot/internal/repo/webapi.executor": "Debug",
    "Go Test.TestNewCityDetailsRepository in github.com/hong195/wheater-bot/internal/repo/webapi.executor": "Run",
    "Go Test.TestRepoInnerApiCallAccepts200Status in github.com/hong195/wheater-bot/internal/repo/webapi.executor": "Debug",
    "Go Test.TestRepoReturnsErrorIfApiUrlIsInvalid in github.com/hong195/wheater-bot/internal/repo/webapi.executor": "Debug",
    "Makefile Target.compose-up-all.executor": "Run",
    "Makefile Target.compose-up-dev.executor": "Run",
    "Makefile Target.compose-up.executor": "Run",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "RunOnceActivity.go.formatter.settings.were.checked": "true",
    "RunOnceActivity.go.migrated.go.modules.settings": "true",
    "RunOnceActivity.go.modules.go.list.on.any.changes.was.set": "true",
    "git-widget-placeholder": "master",
    "go.import.settings.migrated": "true",
    "last_opened_file_path": "/Users/aleksejem/Sites/goweatherbot/internal/repo/webapi",
    "node.js.detected.package.eslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "onboarding.tips.debug.path": "/Users/aleksejem/Sites/goweatherbot/main.go",
    "settings.editor.selected.configurable": "preferences.general"
  }
}]]></component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/internal/repo/webapi" />
      <recent name="$PROJECT_DIR$" />
      <recent name="$PROJECT_DIR$/config" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/internal/repo/webapi" />
      <recent name="$PROJECT_DIR$/../]" />
      <recent name="$PROJECT_DIR$" />
    </key>
  </component>
  <component name="RunManager" selected="Go Test.TestGetCityDetailsByCoordinatesFailsIfCantParseJson in github.com/hong195/wheater-bot/internal/repo/webapi">
    <configuration name="TestCantHandleFailedApiRequest in github.com/hong195/wheater-bot/internal/repo/webapi" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="goweatherbot" />
      <working_directory value="$PROJECT_DIR$/internal/repo/webapi" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/hong195/wheater-bot/internal/repo/webapi" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestCantHandleFailedApiRequest\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestCityRepoCanFetchDetailsByLatLon in github.com/hong195/wheater-bot/internal/repo/webapi" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="goweatherbot" />
      <working_directory value="$PROJECT_DIR$/internal/repo/webapi" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/hong195/wheater-bot/internal/repo/webapi" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestCityRepoCanFetchDetailsByLatLon\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestGetCityDetailsByCoordinatesFailsIfCantParseJson in github.com/hong195/wheater-bot/internal/repo/webapi" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="goweatherbot" />
      <working_directory value="$PROJECT_DIR$/internal/repo/webapi" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/hong195/wheater-bot/internal/repo/webapi" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestGetCityDetailsByCoordinatesFailsIfCantParseJson\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestRepoInnerApiCallAccepts200Status in github.com/hong195/wheater-bot/internal/repo/webapi" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="goweatherbot" />
      <working_directory value="$PROJECT_DIR$/internal/repo/webapi" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/hong195/wheater-bot/internal/repo/webapi" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestRepoInnerApiCallAccepts200Status\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestRepoReturnsErrorIfApiUrlIsInvalid in github.com/hong195/wheater-bot/internal/repo/webapi" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="goweatherbot" />
      <working_directory value="$PROJECT_DIR$/internal/repo/webapi" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/hong195/wheater-bot/internal/repo/webapi" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestRepoReturnsErrorIfApiUrlIsInvalid\E$" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="docker-deploy" factoryName="docker-compose.yml" temporary="true">
      <deployment type="docker-compose.yml" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Go Test.TestGetCityDetailsByCoordinatesFailsIfCantParseJson in github.com/hong195/wheater-bot/internal/repo/webapi" />
        <item itemvalue="Go Test.TestCantHandleFailedApiRequest in github.com/hong195/wheater-bot/internal/repo/webapi" />
        <item itemvalue="Go Test.TestRepoInnerApiCallAccepts200Status in github.com/hong195/wheater-bot/internal/repo/webapi" />
        <item itemvalue="Go Test.TestRepoReturnsErrorIfApiUrlIsInvalid in github.com/hong195/wheater-bot/internal/repo/webapi" />
        <item itemvalue="Go Test.TestCityRepoCanFetchDetailsByLatLon in github.com/hong195/wheater-bot/internal/repo/webapi" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-gosdk-d297c17c1fbd-85c80fddc9a6-org.jetbrains.plugins.go.sharedIndexes.bundled-GO-243.23654.166" />
        <option value="bundled-js-predefined-d6986cc7102b-822845ee3bb5-JavaScript-GO-243.23654.166" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State>
              <option name="CUSTOM_BOOLEAN_PROPERTIES">
                <map>
                  <entry key="Show.Git.Branches" value="false" />
                </map>
              </option>
            </State>
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="Init commit." />
    <MESSAGE value="Add weather and city details functionality with API integration" />
    <MESSAGE value="Add configuration files and Docker setup for weather and city details functionality" />
    <option name="LAST_COMMIT_MESSAGE" value="Add configuration files and Docker setup for weather and city details functionality" />
  </component>
  <component name="VgoProject">
    <settings-migrated>true</settings-migrated>
  </component>
</project>